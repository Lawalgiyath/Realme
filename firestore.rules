
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an organization leader
    function isOrgLeader(orgId) {
      return exists(/databases/$(database)/documents/organizations/$(orgId)) &&
             get(/databases/$(database)/documents/organizations/$(orgId)).data.leaderUid == request.auth.uid;
    }

    match /users/{userId} {
      // Users can only read/write their own data
      allow read, write: if request.auth.uid == userId;

      // Org leaders can read their members' data for aggregated insights
      allow list: if isOrgLeader(request.query.where[0][2]);
    }

    match /community-stories/{storyId} {
      // Allow authenticated users to read stories
      allow read: if request.auth != null;
      // Allow non-anonymous users to create stories
      allow create: if request.auth != null && request.auth.token.firebase.sign_in_provider != 'anonymous';
    }

    match /organizations/{orgId} {
        // Allow any authenticated user to read (e.g., to verify a code)
        allow read: if request.auth != null;
        
        // Only the designated leader can create or update their own organization document
        allow create, update: if isOrgLeader(orgId);
    }
  }
}
